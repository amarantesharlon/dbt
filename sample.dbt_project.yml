# this dbt project configuration is _required_ for all dbt projects.
# it specifies information about the project that dbt needs to run.

name: 'your-package-name'    # Required. This is the name used to reference the package in all dependencies.
version: '0.0.1'


# configuration of dbt file paths (relative to dbt_project.yml)

source-paths: ["models"]     # paths with source code to compile
analysis-paths: ["analysis"] # path with code to compile, but not execute
target-path: "target"        # path for compiled code
clean-targets: ["target"]    # directories removed by the clean task
test-paths: ["test"]         # where to store test results
data-paths: ["data"]         # load csvs from this directory with `dbt seed`
log-path: "logs"             # where to save log files (rotated daily)

profile: "evil-corp"  # this must map to the profile you create in profiles.yml;
                      # this is how dbt gets the connection information for this project.

# Custom configurations for each model.
# The structure of this config object should mirror the project files in the "source-paths" directories.

models:
  your-package-name:         # the following configs pertain to _this_ dbt project
    pardot:                  # assuming pardot is listed in the models/ directory
      enabled: true          # enable all pardot models except where overriden (same as default)
      pardot_emails:         # override the configs for the pardot_emails model
        enabled: true        # enable this specific model (false to disable)
        materialized: table  # create a table instead of a view. acceptable values: view, table, ephemeral, incremental.

        # You can choose sort keys, a dist key, or both to improve query efficiency. By default, materialized
        # tables are created with no sort or dist keys.

        sort: ['timestamp', 'userid']  # optionally set one or more sort keys on the materialized table.
        sort_type: interleaved         # sets sort key to interleaved; default is compound.

        dist: 'userid'                 # optionally set a distribution style and key on the materialized table
                                       # other options include: all, even. anything but all or even will set the dist style to "key".
      pardot_visitoractivity:
        materialized: view
        sort: ['timestamp']  # this has no effect, as sort and dist keys only apply to table and incremental materialization strategies.

  analytics:              # This is a different dbt project included in the "repositories" dict below
    snowplow:
        sessions_landing_page:
            materialized: ephemeral   # ephemeral models are injected as CTEs into models which reference them.
                                      # ephemeral models are not created in the database!
        sessions:
            materialized: incremental # incremental models are append-only
                                      # new records are identified by the sql_where statement below
                                      # use {{this}} to reference the schema and table names for this model

            sql_where: "created_at > (select max(created_at) from {{this}})"

            unique_key: user_id || session_index  #this defines a unique key for this incremental model.
                                                  #records matching this UK will be updated (deleted / inserted) rather than duplicated.


# add dependencies. these will get pulled during the `dbt deps` process.
repositories:
  - "git@github.com:analyst-collective/analytics"
