# **what?**
# When dependabot create a PR, it always adds the `dependencies` label. This
# action will add a corresponding changie yaml file to that PR when that label is added.
# The file is created off a template:
#
# kind: Dependencies
# body: <PR title>
# time: <current timestamp>
# custom:
#   Author: dependabot
#   Issue: 4904
#   PR: <PR number>
#
# **why?**
# Automate changelog generation for more visability with automated dependency updates via dependabot.

# **when?**
# Once a PR is created and it has been correctly labeled with `dependencies`.  The intended use
# is for the PRs created by dependabot.  You can also manually trigger this by adding the
# `dependencies` label at any time.

name: Dependency Changelog

on:
  pull_request:
    # catch when the PR is opened with the label or when the label is added
    types: [opened, labeled]

permissions:
  contents: write
  pull-requests: read

jobs:
  dependency_changelog:
    if: ${{ github.event.label.name == 'dependencies' }}
    runs-on: ubuntu-latest

    steps:
    # timestamp changes the order the changelog entries are listed in the final Changelog.md file.  Precision is not
    # important here.
    # The timestamp on the filename and the timestamp in the contents of the file have different expected formats.
    - name: Get File Name Timestamp
      id: filename_time
      uses: nanzm/get-time-action@v1.1
      with:
        format: 'YYYYMMDD-HHmmss'
    - name: Get File Content Timestamp
      id: file_content_time
      uses: nanzm/get-time-action@v1.1
      with:
        format: 'YYYY-MM-DDTHH:mm:ss.000000-05:00'
    # changie expects files to be named in a specific pattern.
    - name: Generate Filepath
      id: fp
      run: |
        FILEPATH=.changes/unreleased/Dependencies-${{ steps.filename_time.outputs.time }}.yaml
        echo "::set-output name=FILEPATH::$FILEPATH"
    - name: Check if changelog file exists already
      # if there's already a changelog entry, don't add another one!
      # https://github.com/marketplace/actions/paths-changes-filter
      # For each filter, it sets output variable named by the filter to the text:
      #  'true' - if any of changed files matches any of filter rules
      #  'false' - if none of changed files matches any of filter rules
      # also, returns:
      #  `changes` - JSON array with names of all filters matching any of the changed files
      uses: dorny/paths-filter@v2
      id: filter
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        filters: |
          changelog:
            - added: '.changes/unreleased/**.yaml'
    - name: Checkout Branch
      if: steps.filter.outputs.changelog == 'false'
      uses: actions/checkout@v2
      with:
        # persist-credentials: false is crucial otherwise Git push is performed with
        # github.token and not the token you configure using the env: GITHUB_TOKEN.
        # See: https://github.com/gr2m/create-or-update-pull-request-action/issues/281
        persist-credentials: false
    - name: Get name and email for commit
      # The action to update the PR expects the author to be in the format of name <email>.
      # Grab the name and email from the last commit to this PR and use it to commit the new
      # changelog file
      if: steps.filter.outputs.changelog == 'false'
      id: user
      run: |
        USERNAME="$(git log -n 1 --pretty=format:%an)"
        USEREMAIL="$(git log -n 1 --pretty=format:%ae)"
        echo "::set-output name=USERNAME::$USERNAME"
        echo "::set-output name=USEREMAIL::$USEREMAIL"
    - name: Create file from template
      if: steps.filter.outputs.changelog == 'false'
      run: |
        echo kind: Dependencies > "${{ steps.fp.outputs.FILEPATH }}"
        echo body: ${{ github.event.pull_request.title }} >> "${{ steps.fp.outputs.FILEPATH }}"
        echo time: "${{ steps.file_content_time.outputs.time }}" >> "${{ steps.fp.outputs.FILEPATH }}"
        echo custom: >> "${{ steps.fp.outputs.FILEPATH }}"
        echo "  Author: ${{ github.event.pull_request.user.login }}" >> "${{ steps.fp.outputs.FILEPATH }}"
        echo "  Issue: 4904" >> "${{ steps.fp.outputs.FILEPATH }}"  # github.event.pull_request.issue for auto id?
        echo "  PR: ${{ github.event.pull_request.number }}" >> "${{ steps.fp.outputs.FILEPATH }}"
    - name: Commit Changelog File
      if: steps.filter.outputs.changelog == 'false'
      uses: gr2m/create-or-update-pull-request-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        branch: ${{ github.event.pull_request.head.ref }}
        # author expected in the format "Lorem J. Ipsum <lorem@example.com>"
        author: "${{ steps.user.outputs.USERNAME }} <${{ steps.user.outputs.USEREMAIL }}>"
        commit-message: "Add automated changelog yaml from template"
