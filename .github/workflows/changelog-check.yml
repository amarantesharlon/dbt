# **what?**
# Checks that a file has been committed under the /.changes directory
# as a new CHANGELOG entry.  Cannot check for a specific filename as
# it is dynamically generated by change type and timestamp.
# This workflow should not require any secrets since it runs for PRs
# from forked repos.
# By default, secrets are not passed to workflows running from
# a forked repo.

# **why?**
# Ensure code change gets reflected in the CHANGELOG.

# **when?**
# This will run for all PRs going into main and *.latest.

name: Check Changelog Entry

on:
  pull_request:
  workflow_dispatch:

defaults:
  run:
    shell: bash

permissions:
  contents: read
  pull-requests: write

jobs:
  changelog:
    name: changelog

    runs-on: ubuntu-latest

    steps:
      - name: Check if changelog file was added
        # https://github.com/marketplace/actions/paths-changes-filter
        # For each filter, it sets output variable named by the filter to the text:
        #  'true' - if any of changed files matches any of filter rules
        #  'false' - if none of changed files matches any of filter rules
        # also, returns:
        #  `changes` - JSON array with names of all filters matching any of the changed files
        uses: dorny/paths-filter@v2
        id: filter
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: |
            changelog:
              - added: '.changes/unreleased/**.yaml'
      - name: Check if error comment has already posted
        # https://github.com/marketplace/actions/find-comment
        # Finds the exact comment string matching the body-includes.  It will be empty strings
        # if no matching comment was found. Empty strings evaluate to zero in GitHub Actions
        # expressions. e.g. If comment-body is an empty string
        # steps.clcomment.outputs.comment-body == 0 evaluates to true.
        uses: peter-evans/find-comment@v1
        id: clcomment
        with:
          issue-number: ${{github.event.issue.number}}
          body-includes: "Thank you for your pull request! We could not find a changelog entry for this change. For details on how to document a change, see [the contributing guide](https://github.com/dbt-labs/dbt-core/blob/main/CONTRIBUTING.md#adding-changelog-entry)."
      - run: echo ${{ steps.clcomment.outputs.comment-body }}
      - name: Post comment if a changelog file is required, hasn't been added, and no comment exists already
        uses: actions/github-script@v6
        if: steps.filter.outputs.changelog == 'false' && !contains( github.event.pull_request.labels.*.name, 'Skip Changelog')  && steps.clcomment.outputs.comment-body != 0
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "Thank you for your pull request! We could not find a changelog entry for this change. For details on how to document a change, see [the contributing guide](https://github.com/dbt-labs/dbt-core/blob/main/CONTRIBUTING.md#adding-changelog-entry)."
            })
      - name: Fail if no new changelog file exists
        uses: actions/github-script@v6
        if: steps.filter.outputs.changelog == 'false' && !contains( github.event.pull_request.labels.*.name, 'Skip Changelog')
        with:
          script: core.setFailed('Changelog entry required to merge.')
