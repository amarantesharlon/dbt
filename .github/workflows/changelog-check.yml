# **what?**
# Checks that a file has been committed under the /.changes directory
# as a new CHANGELOG entry.  Cannot check for a specific filename as
# it is dynamically generated by change type and timestamp.
# This workflow should not require any secrets since it runs for PRs
# from forked repos.
# By default, secrets are not passed to workflows running from
# a forked repo.

# **why?**
# Ensure code change gets reflected in the CHANGELOG.

# **when?**
# This will run for all PRs going into main and *.latest.

name: Check Changelog Entry

on:
  push:
    branches:
      - "main"
      - "*.latest"
  pull_request:
  workflow_dispatch:

permissions: read-all

defaults:
  run:
    shell: bash

jobs:
  changelog:
    name: changelog

    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository (PR)
        if: github.event_name == 'pull_request_target'
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Check if changelog file was added
        # https://github.com/marketplace/actions/paths-changes-filter
        # For each filter, it sets output variable named by the filter to the text:
        #  'true' - if any of changed files matches any of filter rules
        #  'false' - if none of changed files matches any of filter rules
        # also, returns:
        #  `changes` - JSON array with names of all filters matching any of the changed files
        uses: dorny/paths-filter@v2
        id: filter
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filters: |
            changelog:
              - added: '.changes/unreleased/**.yaml'
      - name: Check a file has been added to .changes/unreleased
        if: steps.filter.outputs.changelog == 'false'
        with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { issue: { number: issue_number }, repo: { owner, repo }  } = context;
          github.issues.createComment({ issue_number, owner, repo, body: 'Missing Changelog entry. ðŸ‘‹' });
      - name: Check a file has been added to .changes/unreleased
        if: steps.filter.outputs.changelog == 'true'
        with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { issue: { number: issue_number }, repo: { owner, repo }  } = context;
          github.issues.createComment({ issue_number, owner, repo, body: 'Thanks for the changelog entry ! ðŸ‘‹' });
