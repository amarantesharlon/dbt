# This is a workflow to run our unit and integration tests

name: Integration Tests

# Triggers
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [ develop ]
  pull_request:
    branches: 
      - 'develop' 
      - '*.latest' 
      - 'pr/*'
      - 'releases/*'
  pull_request_target:  
    branches: [ develop ]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  UnitTest:
    runs-on: 'windows-latest'
    steps:
    - uses: actions/checkout@v2
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: '3.7'
        architecture: 'x64'

    - name: 'Install dependencies'
      run: python -m pip install --upgrade pip && pip install tox
      
    - name: 'Run unit tests'
      run: python -m tox -e py -- -v
      
  PostgresIntegrationTest:
    runs-on: 'windows-latest'
    needs: UnitTest
    steps:
    - uses: actions/checkout@v2
    - name: 'Install postgresql and set up database'
      uses: Azure/powershell@v1
      with: 
        inlineScript: |
          $serviceName = Get-Service -Name postgresql*
          Set-Service -InputObject $serviceName -StartupType Automatic
          Start-Service -InputObject $serviceName
          & $env:PGBIN\createdb.exe -U postgres dbt
          & $env:PGBIN\psql.exe  -U postgres -c "CREATE ROLE root WITH PASSWORD 'password';"
          & $env:PGBIN\psql.exe  -U postgres -c "ALTER ROLE root WITH LOGIN;"
          & $env:PGBIN\psql.exe  -U postgres -c "GRANT CREATE, CONNECT ON DATABASE dbt TO root WITH GRANT OPTION;"
          & $env:PGBIN\psql.exe  -U postgres -c "CREATE ROLE noaccess WITH PASSWORD 'password' NOSUPERUSER;"
          & $env:PGBIN\psql.exe  -U postgres -c "ALTER ROLE noaccess WITH LOGIN;"
          & $env:PGBIN\psql.exe  -U postgres -c "GRANT CONNECT ON DATABASE dbt TO noaccess;"
    
    - name: Setup Python
      uses: actions/setup-python@v2.2.2
      with:
        python-version: '3.7'
        architecture: 'x64'
        
    - name: 'Install dependencies'
      run: python -m pip install --upgrade pip && pip install tox
      
    - name: 'Run integration tests'
      run: python -m tox -e py-postgres -- -v -n4
