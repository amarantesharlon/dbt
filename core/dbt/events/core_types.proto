syntax = "proto3";

package proto_types;

import "google/protobuf/timestamp.proto";
import "google/protobuf/struct.proto";

// Common event info
message CoreEventInfo {
    string name = 1;
    string code = 2;
    string msg = 3;
    string level = 4;
    string invocation_id = 5;
    int32 pid = 6;
    string thread = 7;
    google.protobuf.Timestamp ts = 8;
    map<string, string> extra = 9;
    string category = 10;
}

// CoreNodeRelation
// TODO: rename to NodeRelation if not defined in common
message CoreNodeRelation {
    string database = 10;
    string schema = 11;
    string alias = 12;
    string relation_name = 13;
}

// CoreNodeInfo
// TODO: rename to NodeInfo if not defined in common
message CoreNodeInfo {
    string node_path = 1;
    string node_name = 2;
    string unique_id = 3;
    string resource_type = 4;
    string materialized = 5;
    string node_status = 6;
    string node_started_at = 7;
    string node_finished_at = 8;
    google.protobuf.Struct meta = 9;
    CoreNodeRelation node_relation = 10;
}

//ColumnType
message ColumnType {
    string column_name = 1;
    string previous_column_type = 2;
    string current_column_type = 3;
}

// ColumnConstraint
message ColumnConstraint {
    string column_name = 1;
    string constraint_name = 2;
    string constraint_type = 3;
}

// ModelConstraint
message ModelConstraint {
    string constraint_name = 1;
    string constraint_type = 2;
    repeated string columns = 3;
}

// A - Pre-project loading

// A001
message MainReportVersion {
    string version = 1;
    int32 log_version = 2;
}

message MainReportVersionMsg {
    CoreEventInfo info = 1;
    MainReportVersion data = 2;
}

// A002
message MainReportArgs {
    map<string, string> args = 1;
}

message MainReportArgsMsg {
    CoreEventInfo info = 1;
    MainReportArgs data = 2;
}

// A003
message MainTrackingUserState {
    string user_state = 1;
}

message MainTrackingUserStateMsg {
    CoreEventInfo info = 1;
    MainTrackingUserState data = 2;
}

// A004
message MergedFromState {
    int32 num_merged = 1;
    repeated string sample = 2;
}

message MergedFromStateMsg {
    CoreEventInfo info = 1;
    MergedFromState data = 2;
}

// A005
message MissingProfileTarget {
    string profile_name = 1;
    string target_name = 2;
}

message MissingProfileTargetMsg {
    CoreEventInfo info = 1;
    MissingProfileTarget data = 2;
}

// Skipped A006, A007

// A008
message InvalidOptionYAML {
    string option_name = 1;
}

message InvalidOptionYAMLMsg {
    CoreEventInfo info = 1;
    InvalidOptionYAML data = 2;
}

// A009
message LogDbtProjectError {
    string exc = 1;
}

message LogDbtProjectErrorMsg {
    CoreEventInfo info = 1;
    LogDbtProjectError data = 2;
}

// Skipped A010

// A011
message LogDbtProfileError {
    string exc = 1;
    repeated string profiles = 2;
}

message LogDbtProfileErrorMsg {
    CoreEventInfo info = 1;
    LogDbtProfileError data = 2;
}

// Skipped A012, A013, A014, A015, A016

// A017
message StarterProjectPath {
    string dir = 1;
}

message StarterProjectPathMsg {
    CoreEventInfo info = 1;
    StarterProjectPath data = 2;
}

// A018
message ConfigFolderDirectory {
    string dir = 1;
}

message ConfigFolderDirectoryMsg {
    CoreEventInfo info = 1;
    ConfigFolderDirectory data = 2;
}

// A019
message NoSampleProfileFound {
    string adapter = 1;
}

message NoSampleProfileFoundMsg {
    CoreEventInfo info = 1;
    NoSampleProfileFound data = 2;
}

// A020
message ProfileWrittenWithSample {
    string name = 1;
    string path = 2;
}

message ProfileWrittenWithSampleMsg {
    CoreEventInfo info = 1;
    ProfileWrittenWithSample data = 2;
}

// A021
message ProfileWrittenWithTargetTemplateYAML {
    string name = 1;
    string path = 2;
}

message ProfileWrittenWithTargetTemplateYAMLMsg {
    CoreEventInfo info = 1;
    ProfileWrittenWithTargetTemplateYAML data = 2;
}

// A022
message ProfileWrittenWithProjectTemplateYAML {
    string name = 1;
    string path = 2;
}

message ProfileWrittenWithProjectTemplateYAMLMsg {
    CoreEventInfo info = 1;
    ProfileWrittenWithProjectTemplateYAML data = 2;
}

// A023
message SettingUpProfile {
}

message SettingUpProfileMsg {
    CoreEventInfo info = 1;
    SettingUpProfile data = 2;
}

// A024
message InvalidProfileTemplateYAML {
}

message InvalidProfileTemplateYAMLMsg {
    CoreEventInfo info = 1;
    InvalidProfileTemplateYAML data = 2;
}

// A025
message ProjectNameAlreadyExists {
    string name = 1;
}

message ProjectNameAlreadyExistsMsg {
    CoreEventInfo info = 1;
    ProjectNameAlreadyExists data = 2;
}

// A026
message ProjectCreated {
    string project_name = 1;
    string docs_url = 2;
    string slack_url = 3;
}

message ProjectCreatedMsg {
    CoreEventInfo info = 1;
    ProjectCreated data = 2;
}

// D - Deprecation

// D001
message PackageRedirectDeprecation {
    string old_name = 1;
    string new_name = 2;
}

message PackageRedirectDeprecationMsg {
    CoreEventInfo info = 1;
    PackageRedirectDeprecation data = 2;
}

// D002
message PackageInstallPathDeprecation {
}

message PackageInstallPathDeprecationMsg {
    CoreEventInfo info = 1;
    PackageInstallPathDeprecation data = 2;
}

// D003
message ConfigSourcePathDeprecation {
    string deprecated_path = 1;
    string exp_path = 2;
}

message ConfigSourcePathDeprecationMsg {
    CoreEventInfo info = 1;
    ConfigSourcePathDeprecation data = 2;
}

// D004
message ConfigDataPathDeprecation {
    string deprecated_path = 1;
    string exp_path = 2;
}

message ConfigDataPathDeprecationMsg {
    CoreEventInfo info = 1;
    ConfigDataPathDeprecation data = 2;
}

// D006
message MetricAttributesRenamed {
    string metric_name = 1;
}

message MetricAttributesRenamedMsg {
    CoreEventInfo info = 1;
    MetricAttributesRenamed data = 2;
}

// D007
message ExposureNameDeprecation {
    string exposure = 1;
}

message ExposureNameDeprecationMsg {
    CoreEventInfo info = 1;
    ExposureNameDeprecation data = 2;
}

// D008
message InternalDeprecation {
    string name = 1;
    string reason = 2;
    string suggested_action = 3;
    string version = 4;
}

message InternalDeprecationMsg {
    CoreEventInfo info = 1;
    InternalDeprecation data = 2;
}

// D009
message EnvironmentVariableRenamed {
    string old_name = 1;
    string new_name = 2;
}

message EnvironmentVariableRenamedMsg {
    CoreEventInfo info = 1;
    EnvironmentVariableRenamed data = 2;
}

// D010
message ConfigLogPathDeprecation {
    string deprecated_path = 1;
}

message ConfigLogPathDeprecationMsg {
    CoreEventInfo info = 1;
    ConfigLogPathDeprecation data = 2;
}

// D011
message ConfigTargetPathDeprecation {
    string deprecated_path = 1;
}

message ConfigTargetPathDeprecationMsg {
    CoreEventInfo info = 1;
    ConfigTargetPathDeprecation data = 2;
}

// I065
message DeprecatedModel {
    string model_name = 1;
    string model_version = 2;
    string deprecation_date = 3;
}

message DeprecatedModelMsg {
    CoreEventInfo info = 1;
    DeprecatedModel data = 2;
}


// I - Project parsing

// I001
message InputFileDiffError {
    string category = 1;
    string file_id = 2;
}

message InputFileDiffErrorMsg {
    CoreEventInfo info = 1;
    InputFileDiffError data = 2;
}

// Skipping I002, I003, I004, I005, I006, I007

// I008
message InvalidValueForField {
    string field_name = 1;
    string field_value = 2;
}

message InvalidValueForFieldMsg {
    CoreEventInfo info = 1;
    InvalidValueForField data = 2;
}

// I009
message ValidationWarning {
    string resource_type = 1;
    string field_name = 2;
    string node_name = 3;
}

message ValidationWarningMsg {
    CoreEventInfo info = 1;
    ValidationWarning data = 2;
}

// I010
message ParsePerfInfoPath {
    string path = 1;
}

message ParsePerfInfoPathMsg {
    CoreEventInfo info = 1;
    ParsePerfInfoPath data = 2;
}

// Skipping I013

// I014
message PartialParsingErrorProcessingFile {
    string file = 1;
}

message PartialParsingErrorProcessingFileMsg {
    CoreEventInfo info = 1;
    PartialParsingErrorProcessingFile data = 2;
}

// I016
message PartialParsingError {
    map<string, string> exc_info = 1;
}

message PartialParsingErrorMsg {
    CoreEventInfo info = 1;
    PartialParsingError data = 2;
}

// I017
message PartialParsingSkipParsing {
}

message PartialParsingSkipParsingMsg {
    CoreEventInfo info = 1;
    PartialParsingSkipParsing data = 2;
}

// Skipped I018, I019, I020, I021, I022, I023

// I024
message UnableToPartialParse {
    string reason = 1;
}

message UnableToPartialParseMsg {
    CoreEventInfo info = 1;
    UnableToPartialParse data = 2;
}

// I025
message StateCheckVarsHash {
    string checksum = 1;
    string vars = 2;
    string profile = 3;
    string target = 4;
    string version = 5;
}

message StateCheckVarsHashMsg {
    CoreEventInfo info = 1;
    StateCheckVarsHash data = 2;
}

// Skipped I026, I027


// I028
message PartialParsingNotEnabled {
}

message PartialParsingNotEnabledMsg {
    CoreEventInfo info = 1;
    PartialParsingNotEnabled data = 2;
}

// I029
message ParsedFileLoadFailed {
    string path = 1;
    string exc = 2;
    string exc_info = 3;
}

message ParsedFileLoadFailedMsg {
    CoreEventInfo info = 1;
    ParsedFileLoadFailed data = 2;
}

// Skipping I030 - I039

// I040
message PartialParsingEnabled {
    int32 deleted = 1;
    int32 added = 2;
    int32 changed = 3;
}

message PartialParsingEnabledMsg {
    CoreEventInfo info = 1;
    PartialParsingEnabled data = 2;
}

// I041
message PartialParsingFile {
    string file_id = 1;
    string operation = 2;
}

message PartialParsingFileMsg {
    CoreEventInfo info = 1;
    PartialParsingFile data = 2;
}

// Skipped I042, I043, I044, I045, I046, I047, I048, I049

// I050
message InvalidDisabledTargetInTestNode {
    string resource_type_title = 1;
    string unique_id = 2;
    string original_file_path = 3;
    string target_kind = 4;
    string target_name = 5;
    string target_package = 6;
}

message InvalidDisabledTargetInTestNodeMsg {
    CoreEventInfo info = 1;
    InvalidDisabledTargetInTestNode data = 2;
}

// I051
message UnusedResourceConfigPath {
    repeated string unused_config_paths = 1;
}

message UnusedResourceConfigPathMsg {
    CoreEventInfo info = 1;
    UnusedResourceConfigPath data = 2;
}

// I052
message SeedIncreased {
    string package_name = 1;
    string name = 2;
}

message SeedIncreasedMsg {
    CoreEventInfo info = 1;
    SeedIncreased data = 2;
}

// I053
message SeedExceedsLimitSamePath {
    string package_name = 1;
    string name = 2;
}

message SeedExceedsLimitSamePathMsg {
    CoreEventInfo info = 1;
    SeedExceedsLimitSamePath data = 2;
}

// I054
message SeedExceedsLimitAndPathChanged {
    string package_name = 1;
    string name = 2;
}

message SeedExceedsLimitAndPathChangedMsg {
    CoreEventInfo info = 1;
    SeedExceedsLimitAndPathChanged data = 2;
}

// I055
message SeedExceedsLimitChecksumChanged {
    string package_name = 1;
    string name = 2;
    string checksum_name = 3;
}

message SeedExceedsLimitChecksumChangedMsg {
    CoreEventInfo info = 1;
    SeedExceedsLimitChecksumChanged data = 2;
}

// I056
message UnusedTables {
    repeated string unused_tables = 1;
}

message UnusedTablesMsg {
    CoreEventInfo info = 1;
    UnusedTables data = 2;
}

// I057
message WrongResourceSchemaFile {
    string patch_name = 1;
    string resource_type = 2;
    string plural_resource_type = 3;
    string yaml_key = 4;
    string file_path = 5;
}

message WrongResourceSchemaFileMsg {
    CoreEventInfo info = 1;
    WrongResourceSchemaFile data = 2;
}

// I058
message NoNodeForYamlKey {
    string patch_name = 1;
    string yaml_key = 2;
    string file_path = 3;
}

message NoNodeForYamlKeyMsg {
    CoreEventInfo info = 1;
    NoNodeForYamlKey data = 2;
}

// I059
message MacroNotFoundForPatch {
    string patch_name = 1;
}

message MacroNotFoundForPatchMsg {
    CoreEventInfo info = 1;
    MacroNotFoundForPatch data = 2;
}

// I060
message NodeNotFoundOrDisabled {
    string original_file_path = 1;
    string unique_id = 2;
    string resource_type_title = 3;
    string target_name = 4;
    string target_kind = 5;
    string target_package = 6;
    string disabled = 7;
}

message NodeNotFoundOrDisabledMsg {
    CoreEventInfo info = 1;
    NodeNotFoundOrDisabled data = 2;
}

// I061
message JinjaLogWarning {
    CoreNodeInfo node_info = 1;
    string msg = 2;
}

message JinjaLogWarningMsg {
    CoreEventInfo info = 1;
    JinjaLogWarning data = 2;
}

// I062
message JinjaLogInfo {
    CoreNodeInfo node_info = 1;
    string msg = 2;
}

message  JinjaLogInfoMsg {
    CoreEventInfo info = 1;
    JinjaLogInfo data = 2;
}

// I063
message JinjaLogDebug {
    CoreNodeInfo node_info = 1;
    string msg = 2;
}

message JinjaLogDebugMsg {
    CoreEventInfo info = 1;
    JinjaLogDebug data = 2;
}

// I064
message UnpinnedRefNewVersionAvailable {
    CoreNodeInfo node_info = 1;
    string ref_node_name  = 2;
    string ref_node_package = 3;
    string ref_node_version = 4;
    string ref_max_version = 5;
}

message UnpinnedRefNewVersionAvailableMsg {
    CoreEventInfo info = 1;
    UnpinnedRefNewVersionAvailable data = 2;
}

// I066
message UpcomingReferenceDeprecation {
    string model_name = 1;
    string ref_model_package = 2;
    string ref_model_name = 3;
    string ref_model_version = 4;
    string ref_model_latest_version = 5;
    string ref_model_deprecation_date = 6;
}

message UpcomingReferenceDeprecationMsg {
    CoreEventInfo info = 1;
    UpcomingReferenceDeprecation data = 2;
}

// I067
message DeprecatedReference {
    string model_name = 1;
    string ref_model_package = 2;
    string ref_model_name = 3;
    string ref_model_version = 4;
    string ref_model_latest_version = 5;
    string ref_model_deprecation_date = 6;
}

message DeprecatedReferenceMsg {
    CoreEventInfo info = 1;
    DeprecatedReference data = 2;
}

// I068
message UnsupportedConstraintMaterialization {
    string materialized = 1;
}

message UnsupportedConstraintMaterializationMsg {
    CoreEventInfo info = 1;
    UnsupportedConstraintMaterialization data = 2;
}

// I069
message ParseInlineNodeError{
    CoreNodeInfo node_info = 1;
    string exc = 2;
}

message ParseInlineNodeErrorMsg {
    CoreEventInfo info = 1;
    ParseInlineNodeError data = 2;
}

// I070
message SemanticValidationFailure {
    string msg = 2;
}

message SemanticValidationFailureMsg {
    CoreEventInfo info = 1;
    SemanticValidationFailure data = 2;
}

// I071
message UnversionedBreakingChange {
    repeated string breaking_changes = 1;
    string model_name = 2;
    string model_file_path = 3;
    bool contract_enforced_disabled = 4;
    repeated string columns_removed = 5;
    repeated ColumnType column_type_changes = 6;
    repeated ColumnConstraint enforced_column_constraint_removed = 7;
    repeated ModelConstraint enforced_model_constraint_removed = 8;
    repeated string materialization_changed = 9;
}

message UnversionedBreakingChangeMsg {
    CoreEventInfo info = 1;
    UnversionedBreakingChange data = 2;
}

// I072
message WarnStateTargetEqual {
    string state_path = 1;
}

message WarnStateTargetEqualMsg {
    CoreEventInfo info = 1;
    WarnStateTargetEqual data = 2;
}

// I073
message FreshnessConfigProblem {
    string msg = 1;
}

message FreshnessConfigProblemMsg {
    CoreEventInfo info = 1;
    FreshnessConfigProblem data = 2;
}


// M - Deps generation

//M035
message DepsScrubbedPackageName{
    string package_name = 1;
}

message DepsScrubbedPackageNameMsg{
    CoreEventInfo info = 1;
    DepsScrubbedPackageName data = 2;
}
